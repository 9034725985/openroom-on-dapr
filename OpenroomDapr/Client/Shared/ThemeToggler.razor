@implements IAsyncDisposable

<section>
    <Button @onclick="() => SetTheme(DisplayMode.Light)">Light</Button>
    <Button @onclick="() => SetTheme(DisplayMode.Dark)">Dark</Button>
    <Button @onclick="() => SetTheme(DisplayMode.System)">System</Button>
</section>

@code {
    public enum DisplayMode
    {
        Light,
        Dark,
        System
    }

    private IJSObjectReference? module;

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/displaymode.js");
    }

    public async Task SetTheme(DisplayMode displayMode)
    {
        if (module is not null)
        {
            await module.InvokeVoidAsync("onDisplayModeChanged", $"{displayMode.ToString().ToLower()}");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}